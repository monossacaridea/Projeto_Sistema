package Agencia;

import java.util.*;

// Classe abstrata Cliente
abstract class Cliente {
    protected String nome;
    protected String telefone;
    protected String email;

    public Cliente(String nome, String telefone, String email) {
        this.nome = nome;
        this.telefone = telefone;
        this.email = email;
    }

    public abstract String getIdentificacao();
}

// Cliente Nacional
class ClienteNacional extends Cliente {
    private String cpf;

    public ClienteNacional(String nome, String telefone, String email, String cpf) {
        super(nome, telefone, email);
        this.cpf = cpf;
    }

    @Override
    public String getIdentificacao() {
        return cpf;
    }
}

// Cliente Estrangeiro
class ClienteEstrangeiro extends Cliente {
    private String passaporte;

    public ClienteEstrangeiro(String nome, String telefone, String email, String passaporte) {
        super(nome, telefone, email);
        this.passaporte = passaporte;
    }

    @Override
    public String getIdentificacao() {
        return passaporte;
    }
}

// Classe abstrata PacoteViagem
abstract class PacoteViagem {
    protected String nome;
    protected String destino;
    protected int duracao;
    protected double preco;
    protected String tipo;

    public PacoteViagem(String nome, String destino, int duracao, double preco, String tipo) {
        if (destino.isEmpty() || preco <= 0) {
            throw new IllegalArgumentException("Destino e preço são obrigatórios.");
        }
        this.nome = nome;
        this.destino = destino;
        this.duracao = duracao;
        this.preco = preco;
        this.tipo = tipo;
    }
}

// Pacote de Aventura
class PacoteAventura extends PacoteViagem {
    public PacoteAventura(String nome, String destino, int duracao, double preco) {
        super(nome, destino, duracao, preco, "Aventura");
    }
}

// Classe de Serviços Adicionais
class ServicoAdicional {
    String descricao;
    double preco;

    public ServicoAdicional(String descricao, double preco) {
        this.descricao = descricao;
        this.preco = preco;
    }
}

// Classe Pedido para relacionar Cliente, Pacotes e Serviços
class Pedido {
    private Cliente cliente;
    private List<PacoteViagem> pacotes;
    private List<ServicoAdicional> servicos;

    public Pedido(Cliente cliente) {
        this.cliente = cliente;
        this.pacotes = new ArrayList<>();
        this.servicos = new ArrayList<>();
    }

    public void adicionarPacote(PacoteViagem pacote) {
        pacotes.add(pacote);
    }

    public void adicionarServico(ServicoAdicional servico) {
        servicos.add(servico);
    }

    public List<PacoteViagem> getPacotes() {
        return pacotes;
    }

    public List<ServicoAdicional> getServicos() {
        return servicos;
    }
}

// Classe principal com função main
public class AgenciaViagens {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Cliente> clientes = new ArrayList<>();
        List<PacoteViagem> pacotes = new ArrayList<>();
        List<ServicoAdicional> servicos = new ArrayList<>();
        List<Pedido> pedidos = new ArrayList<>();

        while (true) {
            System.out.println("\n=== Agência de Viagens ===");
            System.out.println("1. Cadastrar Cliente");
            System.out.println("2. Cadastrar Pacote");
            System.out.println("3. Cadastrar Serviço Adicional");
            System.out.println("4. Criar Pedido");
            System.out.println("5. Sair");
            System.out.print("Escolha uma opção: ");
            int opcao = scanner.nextInt();
            scanner.nextLine(); // Limpar buffer

            switch (opcao) {
                case 1:
                    System.out.print("Nome: ");
                    String nome = scanner.nextLine();
                    System.out.print("Telefone: ");
                    String tel = scanner.nextLine();
                    System.out.print("Email: ");
                    String email = scanner.nextLine();
                    System.out.print("Tipo (nacional/estrangeiro): ");
                    String tipoCliente = scanner.nextLine();

                    if (tipoCliente.equalsIgnoreCase("nacional")) {
                        System.out.print("CPF: ");
                        String cpf = scanner.nextLine();
                        clientes.add(new ClienteNacional(nome, tel, email, cpf));
                    } else {
                        System.out.print("Passaporte: ");
                        String pass = scanner.nextLine();
                        clientes.add(new ClienteEstrangeiro(nome, tel, email, pass));
                    }
                    break;

                case 2:
                    System.out.print("Nome do Pacote: ");
                    String nomePacote = scanner.nextLine();
                    System.out.print("Destino: ");
                    String destino = scanner.nextLine();
                    System.out.print("Duração (dias): ");
                    int duracao = scanner.nextInt();
                    System.out.print("Preço: ");
                    double preco = scanner.nextDouble();
                    scanner.nextLine(); // Limpar buffer

                    pacotes.add(new PacoteAventura(nomePacote, destino, duracao, preco));
                    break;

                case 3:
                    System.out.print("Descrição do Serviço: ");
                    String desc = scanner.nextLine();
                    System.out.print("Preço: ");
                    double precoServico = scanner.nextDouble();
                    scanner.nextLine(); // Limpar buffer

                    servicos.add(new ServicoAdicional(desc, precoServico));
                    break;

                case 4:
                    System.out.println("Escolha um cliente (por índice):");
                    for (int i = 0; i < clientes.size(); i++) {
                        System.out.println(i + ": " + clientes.get(i).nome);
                    }
                    int idxCliente = scanner.nextInt();
                    Pedido pedido = new Pedido(clientes.get(idxCliente));

                    System.out.println("Adicionar pacotes ao pedido (índice, -1 para parar):");
                    while (true) {
                        for (int i = 0; i < pacotes.size(); i++) {
                            System.out.println(i + ": " + pacotes.get(i).nome);
                        }
                        int idxPacote = scanner.nextInt();
                        if (idxPacote == -1) break;
                        pedido.adicionarPacote(pacotes.get(idxPacote));
                    }

                    System.out.println("Adicionar serviços ao pedido (índice, -1 para parar):");
                    while (true) {
                        for (int i = 0; i < servicos.size(); i++) {
                            System.out.println(i + ": " + servicos.get(i).descricao);
                        }
                        int idxServico = scanner.nextInt();
                        if (idxServico == -1) break;
                        pedido.adicionarServico(servicos.get(idxServico));
                    }

                    pedidos.add(pedido);
                    break;

                case 5:
                    System.out.println("Encerrando o sistema...");
                    return;

                default:
                    System.out.println("Opção inválida.");
            }
        }
    }
}
